version: '3.9'

services:
  nginx:
    image: nginx:1.23.3-alpine
    restart: unless-stopped
    tty: true
    working_dir: "/var/www"
    ports:
      - '8080:80'
      - '8443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx_log:/var/log/nginx
      - app-data:/var/www
    links:
      - php
    depends_on:
      - php
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080", "curl -f http://localhost:8443" ]
      interval: 1m
      timeout: 3s
      start_period: 10s
      retries: 3
    networks:
      - production
  php:
    build:
      context: ../../
      dockerfile: docker/production/php/Dockerfile
      target: runner
      args:
        UID: '1001'
        USER: 'kukun'
        GROUP: 'kukun'
    image: kukun/laravel
    volumes: # https://docs.docker.com/compose/compose-file/#volumes
      - type: volume
        source: app-data
        target: /var/www
    restart: unless-stopped
    tty: true
    links:
      - db
    depends_on:
      - db
    env_file: .env
    environment:
      APP_NAME: ${APP_NAME}
      DB_HOST: db
      DB_CONNECTION: ${DB_CONNECTION}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_KEY: ${APP_KEY}
    command: [
      "php artisan config:clear",
      "php artisan config:cache"
    ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - production
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1m
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - production

networks:
  production:
    driver: bridge
volumes:
  data:
    driver: local
  app-data:
    driver: local
